// Generated by CoffeeScript 1.7.1
(function() {
  describe('AppCtrl', function() {
    beforeEach(module('cth'));
    beforeEach(function() {
      return inject(function($injector) {
        var $controller;
        $controller = $injector.get('$controller');
        this.$rootScope = $injector.get('$rootScope');
        this.scope = this.$rootScope.$new();
        return this.AppCtrl = $controller('AppCtrl', {
          $scope: this.scope
        });
      });
    });
    describe('navbar', function() {
      it('is closed by default', function() {
        return expect(this.AppCtrl.navbarOpen).toBe(false);
      });
      return it('can toggle state', function() {
        this.AppCtrl.toggleNavDrawer();
        return expect(this.AppCtrl.navbarOpen).toBe(true);
      });
    });
    describe('setting post order', function() {
      return it('should order them by posted date in descending order', function() {
        return expect(this.AppCtrl.postOrder).toBe('-posted');
      });
    });
    return describe('setting post filter', function() {
      beforeEach(function() {
        return inject(function($injector) {
          this.$state = $injector.get('$state');
          return spyOn(this.$state, 'go');
        });
      });
      it('should show all posts as default', function() {
        return expect(this.AppCtrl.postFilter).toBe('');
      });
      it('should show subset after selection', function() {
        this.AppCtrl.setFilter('about');
        return expect(this.AppCtrl.postFilter).toBe('about');
      });
      it('transitions to the posts state after selection', function() {
        this.AppCtrl.setFilter('posts');
        return expect(this.$state.go).toHaveBeenCalledWith('posts');
      });
      return it('has set the active property on the corresponding tag', function() {
        var tag;
        this.AppCtrl.setFilter('about');
        tag = _.find(this.AppCtrl.tags, function(tag) {
          return tag.filter === 'about';
        });
        return expect(tag.active).toBe(true);
      });
    });
  });

}).call(this);
