{
  "name": "activesupport",
  "author": {
    "name": "Brett Shollenberger"
  },
  "repository": {
    "url": "https://github.com/brettshollenberger/ActiveSupport.js"
  },
  "version": "0.1.1",
  "main": "active-support-node.js",
  "dependencies": {
    "lodash": "latest"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-shell": "~0.5.0",
    "jasmine-node": "1.3.1",
    "gamma": "~0.1.0"
  },
  "readme": "ActiveSupport.js\n===============\n\nActive Support for Javascript\n\n#### String#singularize\n\n```\nexpect('cloves'.singularize()).toEqual('clove');\nexpect('soliloquies'.singularize()).toEqual('soliloquy');\nexpect('series'.singularize()).toEqual('series');\n```\n\n#### String#pluralize\n\n```\nexpect('post'.pluralize()).toEqual('posts');\nexpect('person'.pluralize()).toEqual('people');\nexpect('man'.pluralize()).toEqual('men');\n```\n\n#### String#possessiveize\n\n```\nexpect(\"friend\".pluralize()).toEqual(\"friend's\");\nexpect(\"octopus\".possessiveize()).toEqual(\"octopus's\");\nexpect(\"children\".pluralize()).toEqual(\"children's\");\n```\n\nPluralize also accepts a number that dictates pluralization:\n\n```\nexpect('chicken'.pluralize(2)).toEqual('chickens');\nexpect('chicken'.pluralize(1)).toEqual('chicken');\n\nvar errorCount = 1;\nexpect('error'.pluralize(errorCount)).toEqual('error');\n```\n\n#### String#camelize\n  \n```\nit('changes a string to camelcase', function() {\n  expect('active_model'.camelize()).toEqual('ActiveModel');\n  expect('active_model_party'.camelize()).toEqual('ActiveModelParty');\n});\n\nit('leaves acronyms uppercase', function() {\n  expect('HTML_parser'.camelize()).toEqual('HTMLParser');\n});\n```\n\n#### String#underscore\n\n```\nexpect('ActiveModel'.underscore()).toEqual('active_model');\nexpect('SuperDuperClass'.underscore()).toEqual('super_duper_class');\nexpect('SuperHTMLParser'.underscore()).toEqual('super_html_parser');\n```\n\n#### String#hyphenate\n\n```\nexpect('activeModel'.hyphenate()).toEqual('active-model');\nexpect('SuperDuperClass'.hyphenate()).toEqual('super-duper-class');\nexpect('SuperHTMLParser'.hyphenate()).toEqual('super-html-parser');\n```\n\n#### String#humanize\n\n```\nexpect('employee_salary'.humanize()).toEqual('Employee salary');\nexpect('author_id'.humanize()).toEqual('Author');\nexpect('AuthorComments'.humanize()).toEqual('Author comments');\n```\n\n#### String#titleize\n\n```\nexpect('man from the boondocks'.titleize()).toEqual('Man From The Boondocks');\nexpect('x-men: the last stand'.titleize()).toEqual('X-Men: The Last Stand');\nexpect('TheManWithoutAPast'.titleize()).toEqual('The Man Without A Past');\nexpect('raiders_of_the_lost_ark'.titleize()).toEqual('Raiders Of The Lost Ark');\n```\n\n#### String#classify\n\n```\nexpect('posts'.classify()).toEqual('Post');\nexpect('sensors'.classify()).toEqual('Sensor');\nexpect('systems'.classify()).toEqual('System');\nexpect('team_projects'.classify()).toEqual('TeamProject');\n```\n\n#### String#toForeignKey\n\n```\nexpect('post'.toForeignKey()).toEqual('post_id');\nexpect('Sensor'.toForeignKey()).toEqual('sensor_id');\n```\n\n#### String#ordinalize\n\n```\nexpect('1'.ordinalize()).toEqual('1st');\nexpect('202'.ordinalize()).toEqual('202nd');\nexpect('4003'.ordinalize()).toEqual('4003rd');\nexpect('5004'.ordinalize()).toEqual('5004th');\n```\n",
  "readmeFilename": "README.md",
  "description": "ActiveSupport.js ===============",
  "bugs": {
    "url": "https://github.com/brettshollenberger/ActiveSupport.js/issues"
  },
  "homepage": "https://github.com/brettshollenberger/ActiveSupport.js",
  "_id": "activesupport@0.1.1",
  "dist": {
    "shasum": "b78730d041e56040c343040a4acd98765bf2d7b2"
  },
  "_from": "activesupport@",
  "_resolved": "https://registry.npmjs.org/activesupport/-/activesupport-0.1.1.tgz"
}
